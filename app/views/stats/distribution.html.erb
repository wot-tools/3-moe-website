<% content_for :title do %>Distribution<% end %>
<h1>3 MoE distribution data</h1>

<p>Number of players with X 3 MoE</p>
<table border="1" >
  <tr>
	<th>Type</th>
	<th>Heavy Tank</th>
	<th>Medium Tank</th>
	<th>Light Tank</th>
	<th>Tank Destroyer</th>
	<th>SPG</th>
	<th>Tier 5</th>
	<th>Tier 6</th>
	<th>Tier 7</th>
	<th>Tier 8</th>
	<th>Tier 9</th>
	<th>Tier 10</th>
  </tr>  
  <tr>
	<th>3 MoE</th>
	<td><%= %></td>
	<td><%= %></td>
	<td><%= %></td>
	<td><%= %></td>
	<td><%= %></td>
	<td><%= %></td>
	<td><%= %></td>
	<td><%= %></td>
	<td><%= %></td>
	<td><%= %></td>
	<td><%= %></td>
  </tr>
    <tr>
	<th>Total Tanks</th>
	<td><%= number_with_delimiter(Tank.group("vehicle_type_id").count[1]) %></td>
	<td><%= number_with_delimiter(Tank.group("vehicle_type_id").count[2]) %></td>
	<td><%= number_with_delimiter(Tank.group("vehicle_type_id").count[3]) %></td>
	<td><%= number_with_delimiter(Tank.group("vehicle_type_id").count[4]) %></td>
	<td><%= number_with_delimiter(Tank.group("vehicle_type_id").count[5]) %></td>
	<% (5..10).each do |tier| %>
		<td><%= number_with_delimiter(Tank.group(:tier).count[tier])%></td>
	<% end %>
  </tr>
    <tr>
	<th>Available Tanks (non prem.)</th>
	<td><%= number_with_delimiter(Tank.where("ispremium = false").group("vehicle_type_id").count[1]) %></td>
	<td><%= number_with_delimiter(Tank.where("ispremium = false").group("vehicle_type_id").count[2]) %></td>
	<td><%= number_with_delimiter(Tank.where("ispremium = false").group("vehicle_type_id").count[3]) %></td>
	<td><%= number_with_delimiter(Tank.where("ispremium = false").group("vehicle_type_id").count[4]) %></td>
	<td><%= number_with_delimiter(Tank.where("ispremium = false").group("vehicle_type_id").count[5]) %></td>
	<% (5..10).each do |tier| %>
		<td><%= number_with_delimiter(Tank.where("ispremium = false").group(:tier).count[tier])%></td>
	<% end %>
  </tr>
    <tr>
	<th>Players with 1+ 3 MoE</th>
	<td><%= %></td>
	<td><%= %></td>
	<td><%= %></td>
	<td><%= %></td>
	<td><%= %></td>
	<td><%= %></td>
	<td><%= %></td>
	<td><%= %></td>
	<td><%= %></td>
	<td><%= %></td>
	<td><%= %></td>
  </tr>
    <tr>
	<th>avg. 3 MoE/Tank</th>
	<td><%= %></td>
	<td><%= %></td>
	<td><%= %></td>
	<td><%= %></td>
	<td><%= %></td>
	<td><%= %></td>
	<td><%= %></td>
	<td><%= %></td>
	<td><%= %></td>
	<td><%= %></td>
	<td><%= %></td>
  </tr>
    <tr>
	<th>avg. 3 MoE/Player</th>
	<td><%= %></td>
	<td><%= %></td>
	<td><%= %></td>
	<td><%= %></td>
	<td><%= %></td>
	<td><%= %></td>
	<td><%= %></td>
	<td><%= %></td>
	<td><%= %></td>
	<td><%= %></td>
	<td><%= %></td>
  </tr>
</table>
<br>
<p>3 MoE on WN8</p>
<table border="1" >
  <tr>
	<th>Lower</th>
	<th>Upper</th>
	<th>Players</th>
	<th>Marks</th>
  </tr>
 
  <% (0..5000).step(100) do |wn8_number| %>
    <tr>
	  <td><%= number_with_delimiter(wn8_number) %></td>
	  <td><%= number_with_delimiter(wn8_number + 100) %></td>
	  <td><%= number_with_delimiter(Player.where("wn8 >="+ (wn8_number).to_s + " and wn8 <"+ (wn8_number + 100).to_s).count) %></td>
	  <td><%= number_with_delimiter(Player.select("*").joins("INNER JOIN marks on players.id = marks.player_id").where("wn8 >="+ (wn8_number).to_s + " and wn8 <"+ (wn8_number + 100).to_s).count) %></td>
    </tr>
  <% end %>
  <tr>
	<td><%= number_with_delimiter(5000)%></td>
	<td>&#x221e;</td>
	<td><%= number_with_delimiter(Player.where("wn8 >= 5000").count) %></td>
	<td><%= number_with_delimiter(Player.select("*").joins("INNER JOIN marks on players.id = marks.player_id").where("wn8 >= 5000").count) %></td>
  </tr>
</table>
<br>
<p>3 MoE on Winratio</p>
<table border="1" >
  <tr>
	<th>Lower</th>
	<th>Upper</th>
	<th>Players</th>
	<th>Marks</th>
  </tr>
  
  <tr>
	<td><%= number_to_percentage(0, precision: 0) %></td>
	<td><%= number_to_percentage(45, precision: 0) %></td>
	<td><%= number_with_delimiter(Player.where("winratio < 0.45").count) %></td>
	<td><%= number_with_delimiter(Player.select("*").joins("INNER JOIN marks on players.id = marks.player_id").where("winratio < 0.45").count) %></td>
  </tr>
  <% (0.45..0.69).step(0.01) do |winratio_number| %>
    <tr>
	  <td><%= number_to_percentage(winratio_number * 100, precision: 0) %></td>
	  <td><%= number_to_percentage(winratio_number * 100 + 1, precision: 0) %></td>
	  <td><%= number_with_delimiter(Player.where("winratio >="+ (winratio_number).to_s + " and winratio <"+ (winratio_number + 0.01).to_s).count) %></td>
	  <td><%= number_with_delimiter(Player.select("*").joins("INNER JOIN marks on players.id = marks.player_id").where("winratio >="+ (winratio_number).to_s + " and winratio <"+ (winratio_number + 0.01).to_s).count) %></td>
    </tr>
  <% end %>
  <tr>
	<td><%= number_to_percentage(70, precision: 0)%></td>
	<td><%= number_to_percentage(100, precision: 0)%></td>
	<td><%= number_with_delimiter(Player.where("winratio >= 0.7").count) %></td>
	<td><%= number_with_delimiter(Player.select("*").joins("INNER JOIN marks on players.id = marks.player_id").where("winratio >= 0.7").count) %></td>
  </tr>
</table>

<p>Number of players with X 3 MoE</p>
<table border="1" >
  <tr>
	<th>Marks</th>
	<th>Players</th>
  </tr>
  
  <% (1..Mark.group(:player_id).count.max_by{|k,v| v}[1]).each do |marks_count| %>
    <tr>
	  <td><%= number_with_delimiter(marks_count) %></td>
	  <td><%= number_with_delimiter(Mark.group(:player_id).count.values.count(marks_count)) %></td>
    </tr>
  <% end %>
</table>
